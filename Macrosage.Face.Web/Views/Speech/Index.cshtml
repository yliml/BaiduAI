
@{
    ViewBag.Title = "语音识别";
    Layout = "~/Views/Shared/_LayoutWeUI.cshtml";
}

<div class="page js_show" id="app" v-cloak>
    <div class="page__hd">
        <h1 class="page__title">语音识别</h1>
        <p class="page__desc">高精度的语音识别服务，融合百度领先的自然语言处理技术，支持多场景智能语音交互</p>
    </div>

    <div class="page__bd">
        <div class="weui-cells__title">识别的文本</div>
        <div class="weui-cells weui-cells_form">
            <div class="weui-cell">
                <div class="weui-cell__bd">
                    {{tex}}
                </div>
            </div>
        </div>
        <div class="weui-btn-area" v-if="flag==1">
            <a class="weui-btn weui-btn_primary" href="javascript:" @@click="startRecord">点击说话</a>
        </div>
        <div class="weui-btn-area" v-if="flag!=1">
            <a class="weui-btn weui-btn_default" href="javascript:" @@click="stopRecord">结束</a>
        </div>
        <div class="weui-btn-area" v-if="localId.length>0">
            <a class="weui-btn weui-btn_default" href="javascript:" @@click="playVoice">播放</a>
        </div>
    </div>
</div>

@section PageJS{
    @*<script src="~/Static/js/record.js"></script>*@
    <script type="text/javascript">
        var app = new Vue({
            el: "#app",
            data: {
                tex: "",
                localId: "",
                serverId: "",
                flag: 1,
                recorder:null,
            },
            mounted: function () {
                var that = this;
                wx.onVoiceRecordEnd({
                    // 录音时间超过一分钟没有停止的时候会执行 complete 回调
                    complete: function (res) {
                        that.localId = res.localId;
                        that.translateVoice();
                        that.flag = 1;
                    }
                });
                //$('#submit').click(function () {
                    
                //    recorder.upload("", {}, function (state, e) {
                //        debugger
                //        switch (state) {
                //            case 'uploading':
                //                var percentComplete = Math.round(e.loaded * 100 / e.total) + '%';
                //                break;
                //            case 'ok':
                //                debugger;
                //                alert(e.target.responseText);
                //                alert('上传成功');
                //                break;
                //            case 'error':
                //                alert('上传失败');
                //                break;
                //            case 'cancel':
                //                alert('上传被取消');
                //                break;
                //        }
                //    });
                //})
            },
            methods: {
                startRecord() {
                    var that = this;
                    wx.startRecord({
                        cancel: function () {
                            alert('用户拒绝授权录音');
                            that.flag = 1;
                        }, success: function (res) {
                            that.flag = 0;
                        }
                    });
                    //HZRecorder.get(function (rec) {
                    //    that.recorder = rec;
                    //    that.recorder.start();
                    //})
                },
                stopRecord() {
                    var that = this;
                    //that.recorder.stop();
                    wx.stopRecord({
                        success: function (res) {
                            that.localId = res.localId;
                            that.flag = 1;
                            console.log("localId:"+that.localId);
                            //that.uploadVoice()
                            that.translateVoice();
                        }
                    });
                },
                uploadVoice() {
                    var that = this;
                    wx.uploadVoice({
                        localId: that.localId, // 需要上传的音频的本地ID，由stopRecord接口获得
                        isShowProgressTips: 1, // 默认为1，显示进度提示
                        success: function (res) {
                            that.serverId = res.serverId; // 返回音频的服务器端ID
                            that.recognition();
                            console.log("serverId:" + that.serverId);
                        }
                    });
                },
                recognition() {
                var url = '@Url.Action("index", "speech")';
                    $.sunloading.show("正在识别");
                    $.ajax({
                        url: url,
                        dataType: "json",
                        type: "post",
                        data: { serverId: this.serverId },
                        success: function (result) {
                            $.sunloading.close();
                            console.log("识别结果："+result);
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                },
                playVoice() {
                    wx.playVoice({
                        localId: this.localId // 需要播放的音频的本地ID，由stopRecord接口获得
                    });
                },
                translateVoice() {
                    var that = this;
                    wx.translateVoice({
                        localId: this.localId, // 需要识别的音频的本地Id，由录音相关接口获得
                        isShowProgressTips: 1, // 默认为1，显示进度提示
                        success: function (res) {
                            that.tex = res.translateResult;
                            alert(res.translateResult); // 语音识别的结果
                        }
                    });
                }
            }
        });
    </script>
}

